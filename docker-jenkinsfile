pipeline {
    agent any

    environment {
        // Set environment variables if needed
        DOCKER_IMAGE_NAME = 'my-java-app'
        DOCKER_IMAGE_TAG = 'latest'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the source code from the repository
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Build the Java application
                sh './mvnw clean package' // Replace with your build command
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    docker.build("${env.DOCKER_IMAGE_NAME}:${env.DOCKER_IMAGE_TAG}")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Run the Docker container
                    docker.run("${env.DOCKER_IMAGE_NAME}:${env.DOCKER_IMAGE_TAG}", 
                                '-p 8080:8080', 
                                true) // The `true` argument is for running in detached mode
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images and containers if needed
            sh 'docker system prune -af'
        }
    }
}
