library 'reference-pipeline'


pipeline{
	agent{
		label 'AGENTNAME'
	}
	options{
		buildDiscarder(logRotator(numToKeepStr: '10')) #n number of latest builds to be present in Jenkins console
	}
	
	environment{
		//Define all the variables name
	}
	
	stages{
		
		stage('Codecheckout'){
			steps{
				checkout([$class: 'GitSCM', branches: [[name: '/*branchname']], extensions: [], userRemoteConfigs: [[credentialsId: 'Jenkins_Github_creds',url:'git@github.com:GITHUBrepo']]])
			}
		}
		
		stage('Build'){
			steps{
				bat "msbuild ${WORKSPACE}\\filenname.csproj /nologo /nr:false /t:rebuild /p:DeployOnBuild=true /p:PublishProfile=Foldername_defined_in_code"
			}
		}
		
		stage('ZipFile'){
			steps{
				bat '''
				@echo off
				echo %workspace%
				echo Creating Zipfile
				powershell Compress-Archive -Path <Path\\of\\published\\file\\*> -DestinationPath %workspace%\\Filename.zip -Update
				dir
				'''
				
				stash includes: 'Filename.zip', name: 'zipfile'
			}
		}
		
		stage('File-Transfer'){
			agent 'any'
			steps{
				unstash 'zipfile'  #Unzips the zip file
				sh "pwd" 		   #Gives path of the unzipped file
				sshagent(['SSH_key_name']) #SSH-key_name configured in Jeankins console
				{
					echo "${workspace}"
					
					sh "scp -o StrictHostKeyChecking=no $workspace/*.zip CMuser_name@Machine_name.com:/e:/Dir_to_be_deployed"  #Copies the zip file to the desired location in VM
					sh "ssh -o StrictHostKeyChecking=no CMuser_name@Machine_name.com powershell Expand-Archive -Path e:/Dir_to_be_deployed/Filename.zip -DestinationPath e:/Dir_to_be_deployed -Force"  #Unzips the zip file and copied the files to desired location
					sh "ssh -o StrictHostKeyChecking=no CMuser_name@Machine_name.com iisrest /restart"  #Restarts iis-server
				}
			}
		}
	}
}
